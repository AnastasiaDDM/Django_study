# Generated by Django 3.0.5 on 2020-05-20 15:47

from django.db import migrations, models
import user.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.CharField(max_length=50, unique=True, verbose_name='Электронная почта')),
                ('kind', models.CharField(choices=[('CL', 'Клиент'), ('DEV', 'Разработчик'), ('AUT', 'Автор')], db_index=True, default='CL', max_length=3)),
                ('surname', models.CharField(blank=True, max_length=50, verbose_name='Фамилия')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Телефон')),
                ('phone_second', models.CharField(blank=True, max_length=20, verbose_name='Запасной телефон')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_of_birth', models.DateField(blank=True, verbose_name='Дата рождения')),
                ('date_of_delete', models.DateField(blank=True, db_index=True, verbose_name='Дата удаления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', user.managers.CustomUserManager()),
            ],
        ),
    ]
